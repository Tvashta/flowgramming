function openNewTab(n,e){return window.open(n,e)}preventIndependentOpen=()=>{"localhost"===window.location.hostname||window.opener||(window.location.href="/")};const signingKey="Flowgramming",fnSigningKey="FlowgrammingFunction";function saveFlowChart(){switchContext();saveFile("Untitled.fgmin",JSON.stringify(JSON.decycle({signingKey:signingKey,contexts:contexts})))}function downloadFunction(n){window.opener.switchContext();const e=n+".fgfn";if(n in window.opener.getCurrentContexts()){let t={[n]:window.opener.getCurrentContexts()[n]};saveFile(e,JSON.stringify(JSON.decycle({signingKey:fnSigningKey,contexts:t})),"save-"+n)}}function importFlowGram(n){try{const e=JSON.retrocycle(JSON.parse(n));if(e.signingKey!==signingKey)return void swal("Flowgramming doesn't support that file!");contexts=e.contexts,currentContextName="main",graph.fromJSON(contexts[currentContextName].graph),paper.fitToContent({padding:20,minWidth:paperColumn.width(),minHeight:paperColumn.height(),gridWidth:10,gridHeight:10}),start=findModel(contexts[currentContextName].start.id),updateContextsDropdown()}catch(n){swal("Something went wrong!")}finally{clearChat(),renderProgram("Start Flowgramming!"),hideLoader()}}function importFunction(n){try{const e=JSON.retrocycle(JSON.parse(n));if(e.signingKey!==fnSigningKey)return void swal("Not a flowgramming function!");Object.keys(e.contexts).forEach(n=>{addFunctionToTable(n)}),parentWindowContexts={...parentWindowContexts,...e.contexts},window.opener.addNewContext(e.contexts)}catch(n){swal("Something went wrong!")}finally{hideLoader()}}function openFromFile(n,e=!1){showLoader("Importing","Please wait while your flowgram is imported"),setTimeout(()=>{e?importFunction(n):importFlowGram(n)},1e3)}function saveFile(n,e,t="save-btn"){const o=new Blob([e],{type:"application/json;charset=utf-8"});if(window.navigator.msSaveOrOpenBlob)window.navigator.msSaveOrOpenBlob(o,n);else{const e=document.getElementById(t);e.href=URL.createObjectURL(o),e.download=n}}